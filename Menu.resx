<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>